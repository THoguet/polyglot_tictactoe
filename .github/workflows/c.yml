name: c

on:
  push:
    paths:
      - 'c/**'
      - '**/c.yml'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      working-directory: ${{github.workspace}}/c
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      run: mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ..

    - name: install Valgrind
      run: sudo apt install valgrind

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/c/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/c/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C ${{env.BUILD_TYPE}} -j 10
      
    - name: mem-check
      working-directory: ${{github.workspace}}/c/build
      run: ctest -C ${{env.BUILD_TYPE}}  -T memcheck -j 10
    

